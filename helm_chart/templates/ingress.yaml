apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  {{ if .Values.isProduction -}}
    name: ahins-ingress
  {{- else -}}
    name: ahins-ingress-staging
  {{- end }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/upstream-vhost: ishankhare.com
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    cert-manager.io/issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
      {{ if .Values.isProduction -}}
      - ishankhare.dev
      secretName: ahins-prod
      {{- else -}}
      - staging.ishankhare.dev
      secretName: ahins-staging
      {{- end }}
  rules:
    {{ if .Values.isProduction -}}
    - host: ishankhare.dev
    {{- else -}}
    - host: staging.ishankhare.dev
    {{- end }}
      http:
        paths:
          - path: /
            backend:
              serviceName: ahins
              servicePort: 80
---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  {{ if .Values.isProduction -}}
    name: ahins-gcs-ingress
  {{- else -}}
name: ahins-gcs-ingress-staging
  {{- end }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/rewrite-target: $1
    nginx.ingress.kubernetes.io/upstream-vhost: storage.googleapis.com
    cert-manager.io/issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
      {{ if .Values.isProduction -}}
      - ishankhare.dev
      secretName: ahins-prod
      {{- else -}}
      - staging.ishankhare.dev
      secretName: ahins-staging
      {{- end }}
  rules:
    {{ if .Values.isProduction -}}
    - host: ishankhare.dev
    {{- else -}}
    - host: staging.ishankhare.dev
    {{- end }}
      http:
        paths:
          - path: /media(/.+)
            backend:
              serviceName: gcs-service
              servicePort: 443



---

apiVersion: v1
kind: Service
metadata:
  name: gcs-service
spec:
  type: ExternalName
  externalName: storage.googleapis.com
  ports:
    - name: https
      port: 443

